/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "RNReactNativeStaticServerSpecJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_getConstants(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeReactNativeStaticServerCxxSpecJSI *>(&turboModule)->getConstants(
    rt
  );
}
static jsi::Value __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_addListener(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeReactNativeStaticServerCxxSpecJSI *>(&turboModule)->addListener(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_getActiveServerId(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeReactNativeStaticServerCxxSpecJSI *>(&turboModule)->getActiveServerId(
    rt
  );
}
static jsi::Value __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_removeListeners(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeReactNativeStaticServerCxxSpecJSI *>(&turboModule)->removeListeners(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_start(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeReactNativeStaticServerCxxSpecJSI *>(&turboModule)->start(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_getLocalIpAddress(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeReactNativeStaticServerCxxSpecJSI *>(&turboModule)->getLocalIpAddress(
    rt
  );
}
static jsi::Value __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_getOpenPort(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeReactNativeStaticServerCxxSpecJSI *>(&turboModule)->getOpenPort(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_stop(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeReactNativeStaticServerCxxSpecJSI *>(&turboModule)->stop(
    rt
  );
}

NativeReactNativeStaticServerCxxSpecJSI::NativeReactNativeStaticServerCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("ReactNativeStaticServer", jsInvoker) {
  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_getConstants};
  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_addListener};
  methodMap_["getActiveServerId"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_getActiveServerId};
  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_removeListeners};
  methodMap_["start"] = MethodMetadata {3, __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_start};
  methodMap_["getLocalIpAddress"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_getLocalIpAddress};
  methodMap_["getOpenPort"] = MethodMetadata {1, __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_getOpenPort};
  methodMap_["stop"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerCxxSpecJSI_stop};
}


} // namespace facebook::react
