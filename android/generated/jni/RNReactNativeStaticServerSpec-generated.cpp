
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "RNReactNativeStaticServerSpec.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_getActiveServerId(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getActiveServerId", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_start(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "start", "(DLjava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_getLocalIpAddress(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getLocalIpAddress", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_getOpenPort(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getOpenPort", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_stop(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "stop", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

NativeReactNativeStaticServerSpecJSI::NativeReactNativeStaticServerSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerSpecJSI_getConstants};
  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeReactNativeStaticServerSpecJSI_addListener};
  methodMap_["getActiveServerId"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerSpecJSI_getActiveServerId};
  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeReactNativeStaticServerSpecJSI_removeListeners};
  methodMap_["start"] = MethodMetadata {3, __hostFunction_NativeReactNativeStaticServerSpecJSI_start};
  methodMap_["getLocalIpAddress"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerSpecJSI_getLocalIpAddress};
  methodMap_["getOpenPort"] = MethodMetadata {1, __hostFunction_NativeReactNativeStaticServerSpecJSI_getOpenPort};
  methodMap_["stop"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerSpecJSI_stop};
}

std::shared_ptr<TurboModule> RNReactNativeStaticServerSpec_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "ReactNativeStaticServer") {
    return std::make_shared<NativeReactNativeStaticServerSpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react
