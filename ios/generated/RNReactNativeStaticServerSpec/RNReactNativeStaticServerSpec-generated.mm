/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RNReactNativeStaticServerSpec.h"


@implementation NativeReactNativeStaticServerSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "addListener", @selector(addListener:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_getActiveServerId(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getActiveServerId", @selector(getActiveServerId:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "removeListeners", @selector(removeListeners:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_start(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "start", @selector(start:configPath:errlogPath:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_getLocalIpAddress(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getLocalIpAddress", @selector(getLocalIpAddress:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_getOpenPort(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getOpenPort", @selector(getOpenPort:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_stop(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "stop", @selector(stop:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeReactNativeStaticServerSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "getConstants", @selector(getConstants), args, count);
    }

  NativeReactNativeStaticServerSpecJSI::NativeReactNativeStaticServerSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeReactNativeStaticServerSpecJSI_addListener};
        
        
        methodMap_["getActiveServerId"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerSpecJSI_getActiveServerId};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeReactNativeStaticServerSpecJSI_removeListeners};
        
        
        methodMap_["start"] = MethodMetadata {3, __hostFunction_NativeReactNativeStaticServerSpecJSI_start};
        
        
        methodMap_["getLocalIpAddress"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerSpecJSI_getLocalIpAddress};
        
        
        methodMap_["getOpenPort"] = MethodMetadata {1, __hostFunction_NativeReactNativeStaticServerSpecJSI_getOpenPort};
        
        
        methodMap_["stop"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerSpecJSI_stop};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeReactNativeStaticServerSpecJSI_getConstants};
        
  }
} // namespace facebook::react
